// Code generated by go-swagger; DO NOT EDIT.

package status_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/lexis-project/lexis-backend-services-userorg-service.git/models"
)

// GetStatusReader is a Reader for the GetStatus structure.
type GetStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetStatusNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetStatusOK creates a GetStatusOK with default headers values
func NewGetStatusOK() *GetStatusOK {
	return &GetStatusOK{}
}

/*GetStatusOK handles this case with default header values.

Status information of the system
*/
type GetStatusOK struct {
	Payload *models.Status
}

func (o *GetStatusOK) Error() string {
	return fmt.Sprintf("[GET /status/{id}][%d] getStatusOK  %+v", 200, o.Payload)
}

func (o *GetStatusOK) GetPayload() *models.Status {
	return o.Payload
}

func (o *GetStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Status)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStatusNotFound creates a GetStatusNotFound with default headers values
func NewGetStatusNotFound() *GetStatusNotFound {
	return &GetStatusNotFound{}
}

/*GetStatusNotFound handles this case with default header values.

The endpoint provided doesn't exis
*/
type GetStatusNotFound struct {
	Payload *models.ErrorResponse
}

func (o *GetStatusNotFound) Error() string {
	return fmt.Sprintf("[GET /status/{id}][%d] getStatusNotFound  %+v", 404, o.Payload)
}

func (o *GetStatusNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetStatusNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
